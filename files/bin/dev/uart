#!/usr/bin/env bash

# connect

# Usage:
# $ uart -d <device> -s <speed>
# Example: uart -d /dev/ttyS0 -s 9600

# Get arguments
while getopts d:s: option
do
    case "${option}"
    in
	d) device=${OPTARG};;
	s) speed=${OPTARG};;
    esac
done

# Check that device argument exists
if [ ! -c "${device}" ]; then
    echo "Error: '${device}' is not a device!"
    exit 1
fi

# Speed is optional
if [ "${speed}" = "" ]; then
    speed="9600"
    echo "Warning: Using default speed '${speed}'!"
fi

# Check that speed argument is valid
[ -n "${speed}" ] && [ "${speed}" -eq "${speed}" ] 2>/dev/null
if [ $? -ne 0 ]; then
    echo "Error: 'Speed MUST be a number"
    exit 1
fi

# Trap signals
cleanup()
{
    # Kill cat
    kill $catPid

    echo -e "Done"
    exit 0
}

trap cleanup 1 2 3 6 9

# Set up device
stty -F ${device} ${speed}> /dev/null 2>&1
if [ "$?" -ne 0 ]; then
    echo "Please specify different speed!"
    exit 1
fi

# Let cat read the device $1 in the background
cat ${device} &

# Capture PID of background process so it is possible to terminate it when done
catPid=$!

# Sent commands
while true
do
    read cmd
    echo "$cmd" > ${device}
    #echo -ne "AT+RST\r\n" > ${device}
    #echo -ne "$cmd" > ${device}
done

# Terminate background read process
kill $catPid

exit 0
