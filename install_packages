#!/usr/bin/env bash

if [[ $EUID -ne 0 ]]; then
    echo "This script must be run as root, use sudo $0 instead" 1>&2
    exit 1
fi

# Check that bin argument exists
if ! [ -f "$1" ]; then
    echo "Error: Please provide package file!"
    exit 1
fi

file="$1"

function install()
{
    packages="$*"
    echo -n "Installing"
    echo -n $'\e[1;34m'" ${packages}"$'\e[0m'

    rv=$(apt-get install -y "${packages}" > /dev/null 2>&1;echo $?)
    #rv=$((RANDOM % 2))
    if [ "${rv}" != 0 ] ; then
	echo -e $'\e[1;31m'" FAIL!"$'\e[0m'
	exit -1
    else
	echo -e $'\e[1;32m'" OK"$'\e[0m'
	return 0
    fi
}
export -f install

function update()
{
    echo -n "Update"
    rv=$(apt-get update > /dev/null 2>&1;echo $?)
    if [ "${rv}" != 0 ] ; then
	echo $'\e[1;31m'" FAIL!"$'\e[0m'
	return 1
    else
	echo $'\e[1;32m'" OK"$'\e[0m'
    fi
    echo -n "Upgrade"
    rv=$(apt-get upgrade > /dev/null 2>&1;echo $?)
    if [ "${rv}" != 0 ] ; then
	echo $'\e[1;31m'" FAIL!"$'\e[0m'
	return 1
    else
	echo $'\e[1;32m'" OK"$'\e[0m'
    fi
    return 0
}

#update || exit 1
#sed -e 's/[#;].*$//' -e '/^$/d' "${file}" | xargs -n 1  | sort | uniq | xargs -n 1 bash -c 'install "$@" || exit 1' - 2>/dev/null

#grep "^# " "${file}" | sed -e 's/^#\(.*\)/\1/'

#sed -e 's/# .*$/FUCK/' -e '/^$/d' "${file}"


grep "^# " "${file}" | sed -e 's/^# //' | xargs -n 1  | sort | uniq | xargs -n 1 bash -c 'install "$@" || exit 1' - 2>/dev/null
